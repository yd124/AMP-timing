<DATAFILE>

[FILEINFO]
file = '../../../../data/RV217Mono.csv'
delimiter = comma
header = {ID, days, log10VL}

[CONTENT]
ID = {use=identifier}
days = {use=time}
log10VL = {use=observation, name=log10VL, type=continuous}

<MODEL>

[INDIVIDUAL]
input = {initT_pop, aS_pop, dS_pop, omega_dS, tau_pop, lBt0_pop, omega_lBt0, dI_pop, omega_initT, lp_pop, V0_pop, n_pop, omega_n, omega_dI, omega_aS, corr_lBt0_dS}

DEFINITION:
initT = {distribution=logNormal, typical=initT_pop, sd=omega_initT}
aS = {distribution=logNormal, typical=aS_pop, sd=omega_aS}
dS = {distribution=logNormal, typical=dS_pop, sd=omega_dS}
tau = {distribution=logNormal, typical=tau_pop, no-variability}
lBt0 = {distribution=normal, typical=lBt0_pop, sd=omega_lBt0}
dI = {distribution=logNormal, typical=dI_pop, sd=omega_dI}
lp = {distribution=normal, typical=lp_pop, no-variability}
V0 = {distribution=logNormal, typical=V0_pop, no-variability}
n = {distribution=logNormal, typical=n_pop, sd=omega_n}
correlation = {level=id, r(lBt0, dS)=corr_lBt0_dS}

[LONGITUDINAL]
input = {a}

file = '../../../Models/Ref_model_1.4_V0.txt'

DEFINITION:
log10VL = {distribution=normal, prediction=Vout, errorModel=constant(a)}

<FIT>
data = log10VL
model = log10VL

<PARAMETER>
V0_pop = {value=1, method=FIXED}
a = {value=0.3576890303222341, method=MLE}
aS_pop = {value=0.6220997675514449, method=MLE}
corr_lBt0_dS = {value=0.9987825001668853, method=MLE}
dI_pop = {value=0.7625020959120462, method=MLE}
dS_pop = {value=0.0004376456439811, method=MLE}
initT_pop = {value=8.749048270166531, method=MLE}
lBt0_pop = {value=-4.485801474858931, method=MLE}
lp_pop = {value=3, method=FIXED}
n_pop = {value=0.1247227365084838, method=MLE}
omega_aS = {value=0.0275410876456265, method=MLE}
omega_dI = {value=0.3190801064151719, method=MLE}
omega_dS = {value=1.435182413177209, method=MLE}
omega_initT = {value=0.838083188356484, method=MLE}
omega_lBt0 = {value=0.5889475536962113, method=MLE}
omega_n = {value=0.4133918463309731, method=MLE}
tau_pop = {value=1, method=FIXED}

<MONOLIX>

[TASKS]
populationParameters()
individualParameters(method = {conditionalMean, conditionalMode })
fim(method = Linearization)
logLikelihood(method = Linearization)
plotResult(method = {outputplot, indfits, obspred, parameterdistribution, covariatemodeldiagnosis, randomeffects, covariancemodeldiagnosis, saemresults })

[SETTINGS]
GLOBAL:
exportpath = '../'

POPULATION:
burniniterations = 20
smoothingiterations = 500
exploratoryiterations = 1000
simulatedannealingiterations = 1000
exploratoryalpha = 0.1
smoothingalpha = 0.1
exploratoryinterval = 500

